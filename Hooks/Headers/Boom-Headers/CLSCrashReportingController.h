/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "Boom-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "CLSNetworkClientDelegate.h"
#import "CLSReportsControllerDelegate.h"

@class CLSReportsController, CLSInternalReport, CLSNetworkClient, CLSFileManager, NSString, NSOperationQueue, CLSSettings, UIAlertView;
@protocol CLSCrashReportingControllerDelegate;

@interface CLSCrashReportingController : XXUnknownSuperclass <CLSNetworkClientDelegate, CLSReportsControllerDelegate> {
	CLSFileManager* _fileMananger;
	CLSNetworkClient* _networkClient;
	CLSReportsController* _reportsController;
	NSOperationQueue* _operationQueue;
	CLSSettings* _settings;
	int _alwaysSendButtonIndex;
	UIAlertView* _crashReportSubmissionAlert;
	CLSInternalReport* _promptedReport;
	int _promptChoice;
	id<CLSCrashReportingControllerDelegate> _delegate;
	CLSFileManager* _fileManager;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) __weak id<CLSCrashReportingControllerDelegate> delegate;
@property(retain, nonatomic) CLSFileManager* fileManager;
@property(readonly, assign, nonatomic) CLSReportsController* reportsController;
@property(retain, nonatomic) CLSNetworkClient* networkClient;
@property(retain, nonatomic) NSOperationQueue* operationQueue;
-(void).cxx_destruct;
-(void)reportsControllerDidCompleteAllSubmissions:(id)reportsController;
-(void)reportsController:(id)controller didCompletePackageSubmission:(id)submission error:(id)error;
-(id)bundleIdentifierForReportsController:(id)reportsController;
-(id)APIKeyForReportsController:(id)reportsController;
-(id)settingsForReportsController:(id)reportsController;
-(void)networkClient:(id)client didFinishUploadWithPath:(id)path error:(id)error;
-(BOOL)networkClientCanUseBackgroundSessions:(id)sessions;
-(void)didChangeUIOrientation:(id)orientation;
-(void)didChangeOrientation:(id)orientation;
-(void)didBecomeInactive:(id)inactive;
-(void)willBecomeActive:(id)active;
-(void)captureInitialNotificationStates;
-(void)setupStateNotifications;
-(BOOL)checkForAndCreateLaunchMarker;
-(BOOL)removeLaunchFailureMarker;
-(BOOL)launchFailureMarkerPresent;
-(BOOL)createLaunchFailureMarker;
-(id)launchFailureMarkerPath;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)alertViewCancel:(id)cancel;
-(void)handlePromptCompleteForReport:(id)report shouldSubmit:(BOOL)submit shouldMarkAlwaysSubmit:(BOOL)submit3;
-(void)setupAndDisplayAlertWithTitle:(id)title message:(id)message cancel:(id)cancel send:(id)send alwaysSend:(id)send5 report:(id)report;
-(void)displayPermissionAlertForReport:(id)report;
-(void)retryUploadForReportAtPath:(id)path;
-(void)uploadPreexistingFiles:(id)files;
-(void)handleExistingFilesInPrepared;
-(void)handleExistingFilesInProcessing;
-(void)handleContentsInOtherReportingDirectories;
-(void)removeReport:(id)report;
-(void)handleDelegateCompletionForReport:(id)report submit:(BOOL)submit;
-(void)processExistingActiveReportPath:(id)path asUrgent:(BOOL)urgent;
-(void)processExistingReportPaths:(id)paths asUrgent:(BOOL)urgent;
-(id)setupCurrentReport;
-(BOOL)installCrashReportingHandlers:(XXStruct_69FNmD*)handlers;
-(BOOL)prepareForNewLaunch;
-(id)bundleIdentifier;
-(BOOL)needsToPrompt;
-(BOOL)canProcessUrgentReports;
-(BOOL)delegateNeedsToBeInformedOfReports;
-(BOOL)packagingEnabled;
-(void)checkForUserPromptSetting;
-(BOOL)potentiallySubmittableCrashOccurred;
-(BOOL)attemptCurrentReportSubmission;
-(void)deliverCrashDelegateCallback;
-(unsigned)machExceptionMask;
-(id)settings;
-(id)APIKey;
-(id)installIdentifier;
-(BOOL)firstInstall;
-(BOOL)checkPreconditions;
-(void)crashReportingSetupCompleted:(unsigned long long)completed;
-(BOOL)startCrashReporterWithAPIKey:(id)apikey betaToken:(id)token profilingMark:(unsigned long long)mark report:(id)report;
-(BOOL)startWithProfilingMark:(unsigned long long)profilingMark betaToken:(id)token;
-(id)clientWithOperationQueue:(id)operationQueue;
-(id)initWithFileManager:(id)fileManager delegate:(id)delegate;
@end

