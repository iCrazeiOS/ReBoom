/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "Boom-Structs.h"
#import "HSB2RaycastListenerDelegate.h"
#import "HSOpacityLayer.h"

@class HSParticleSystemQuad, CCSprite, LevelHelperLoader, HSLabelWithStroke, NSMutableArray, NSArray, Cage, CCAction, HSOpacityNode, LHSprite, NSString, NSMutableSet, TrialSession, Object156, CCRenderTexture;

__attribute__((visibility("hidden")))
@interface TrialLayer : HSOpacityLayer <HSB2RaycastListenerDelegate> {
	b2World* world;
	GLESDebugDraw* m_debugDraw;
	LevelHelperLoader* lh;
	BOOL inGoal;
	CGRect worldSize;
	Object156* wheely_;
	HSB2RaycastListener* raycastListenerProxy;
	float groundFraction;
	BOOL started;
	NSArray* rollingStones;
	int rollingStonesCount;
	NSMutableArray* rollingStonesSoundEngines;
	NSString* levelId;
	BOOL hasDisplayedChallengerNames;
	float challengerNamesTimer;
	HSLabelWithStroke* challengerName;
	CCRenderTexture* ghostGroupTX;
	CCSprite* ghostGroup;
	LHSprite* ghostHub;
	CGPoint ghostPosition;
	float timeAccumulator;
	float deltaTime;
	unsigned lastAnimation;
	CCAction* currentGhostHubAnimation;
	CCAction* currentGhostEngineAnimation;
	CCAction* currentGhostWheelAnimation;
	NSString* ghostHubFrame;
	NSString* ghostEngineFrame;
	NSString* ghostWheelFrame;
	NSString* ghostHubStyle;
	NSString* ghostEngineStyle;
	NSString* ghostWheelStyle;
	CCSprite* ghostHero;
	CCSprite* ghostEngine;
	CCSprite* ghostWheel;
	NSString* Object393;
	NSString* engineStyle;
	NSString* wheelStyle;
	NSMutableSet* bombs;
	NSMutableSet* leftFlippers;
	NSMutableSet* rightFlippers;
	bool hasLeftFlipper;
	bool hasRightFlipper;
	float bombShakeTime;
	BOOL shaking;
	BOOL showGhostHint;
	HSOpacityNode* particleNodeAboveSpritesBelowGround;
	CCSprite* skyLimit;
	BOOL scheduledUpdate;
	NSString* finishSound;
	HSParticleSystemQuad* snow1;
	HSParticleSystemQuad* snow2;
	CGSize winSize;
	BOOL isChallenge;
	BOOL isTournament;
	BOOL isGhostRace;
	TrialSession* session_;
	HSOpacityNode* particleNodeBG;
	HSOpacityNode* particleNodeFG;
	HSOpacityNode* ghostNode;
	Cage* goalCage;
	NSString* opponentName;
	unsigned _ghostHubStyleID;
	unsigned _ghostEngineStyleID;
	unsigned _ghostWheelStyleID;
	float distance_;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign, nonatomic) CCSprite* skyLimit;
@property(assign, nonatomic) float distance;
@property(readonly, assign, nonatomic) NSString* ghostWheelStyle;
@property(readonly, assign, nonatomic) NSString* ghostEngineStyle;
@property(readonly, assign, nonatomic) NSString* ghostHubStyle;
@property(assign, nonatomic) unsigned ghostWheelStyleID;
@property(assign, nonatomic) unsigned ghostEngineStyleID;
@property(assign, nonatomic) unsigned ghostHubStyleID;
@property(readonly, assign, nonatomic) unsigned wheelStyleID;
@property(readonly, assign, nonatomic) unsigned engineStyleID;
@property(readonly, assign, nonatomic) unsigned hubStyleID;
@property(assign, nonatomic) BOOL showGhostHint;
@property(retain, nonatomic) NSString* opponentName;
@property(assign, nonatomic) BOOL isGhostRace;
@property(assign, nonatomic) BOOL isChallenge;
@property(assign, nonatomic) BOOL isTournament;
@property(assign, nonatomic) CGRect worldSize;
@property(readonly, assign, nonatomic) Cage* goalCage;
@property(readonly, assign, nonatomic) HSOpacityNode* ghostNode;
@property(readonly, assign, nonatomic) HSOpacityNode* particleNodeFG;
@property(readonly, assign, nonatomic) HSOpacityNode* particleNodeBG;
@property(readonly, assign, nonatomic) Object156* wheely;
@property(retain, nonatomic) TrialSession* session;
+(id)getCurrentLayer;
-(void).cxx_destruct;
-(void)changeBlendForGhost;
-(float)distanceToGround;
-(float)ReportFixture:(b2Fixture*)fixture point:(const b2Vec2*)point normal:(const b2Vec2*)normal fraction:(float)fraction;
-(void)removeCollectedPickups:(id)pickups;
-(void)reposition:(b2Vec2)reposition;
-(void)stopRight;
-(void)stopLeft;
-(void)right;
-(void)left;
-(void)stop;
-(void)pause;
-(void)startDemo;
-(void)start;
-(void)impactElements:(id)elements;
-(void)impactTrampoline:(id)trampoline;
-(void)impactBoostTunnel:(id)tunnel;
-(void)impactConveyor:(id)conveyor;
-(void)impactBumper:(id)bumper;
-(void)impactFireBowl:(id)bowl;
-(void)impactSpringboard:(id)springboard;
-(void)impactBridgePart:(id)part;
-(void)impactGlassBall:(id)ball;
-(void)impactSandStone:(id)stone;
-(void)impactCloud:(id)cloud;
-(void)impactIce:(id)ice;
-(void)impactStone:(id)stone;
-(void)impactPlastic:(id)plastic;
-(void)impactWood:(id)wood;
-(void)impactMoving:(id)moving;
-(void)wheelyCollision:(id)collision;
-(void)impactWheely:(id)wheely;
-(void)triggerFinishSound;
-(void)goal:(id)goal;
-(void)idleWheely;
-(void)chrono:(id)chrono;
-(void)checkpoint:(id)checkpoint;
-(void)powerup:(id)powerup;
-(void)star:(id)star;
-(void)bowlingPin:(id)pin;
-(void)rollingStone:(id)stone;
-(void)ball:(id)ball;
-(void)buoyantHitWater:(id)water;
-(void)wheelyHitQuicksand:(id)quicksand;
-(void)wheelyHitWater:(id)water;
-(void)golden_spike:(id)spike;
-(void)spikes:(id)spikes;
-(void)pile_of_coins:(id)coins;
-(void)pickup:(id)pickup;
-(void)updateGhostWithVersion:(unsigned)version rec:(ghostData*)rec;
-(void)startGhostAnimation:(unsigned)animation;
-(void)updateRollingStones;
-(void)updateChallengerNames:(float)names;
-(void)update:(float)update;
-(void)stepWorldFixed:(float)fixed;
-(void)anchorToWorld:(id)world anchorPoint:(CGPoint)point;
-(void)joinBridges;
-(void)impactBombPre:(id)pre;
-(void)impactBomb:(id)bomb;
-(void)updatePositions:(float)positions;
-(void)onEnter;
-(void)addSnow;
-(void)updateSnow:(float)snow;
-(void)removeConsumed:(id)consumed;
-(void)cleanup;
-(void)dealloc;
-(id)initWithLevelId:(id)levelId data:(id)data session:(id)session;
-(void)removeAsCurrentLayer;
@end

