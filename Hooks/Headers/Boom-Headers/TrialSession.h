/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "Boom-Structs.h"
#import "TournamentsClientDelegate.h"
#import "TrialGameControllerDelegate.h"
#import "HSOpacityLayer.h"

@class TrialHUD, NSArray, TrialBackground, NSDictionary, CCSprite, ChallengePlayer, Level, LoadingPopup, TrialLayer, Tournament, Object156, NSMutableSet, HSParticleSystemQuad, Challenge, HSMenu, NSMutableDictionary, TournamentsClient, NSFileHandle, UIImage, NSString, NSData, HSOverlay;

__attribute__((visibility("hidden")))
@interface TrialSession : HSOpacityLayer <TournamentsClientDelegate, TrialGameControllerDelegate> {
	Object156* wheely_;
	float totalTime;
	int totalTime100;
	CGPoint offset;
	CGPoint lastOffset;
	CGRect offsetRect;
	unsigned retries;
	Level* levelState;
	NSString* levelId;
	NSString* levelVersion;
	NSMutableDictionary* checkpointsByName;
	TrialLayer* gameLayer;
	float targetScale;
	CGSize screenSize;
	BOOL done;
	BOOL respawnPointSet;
	BOOL isDead;
	b2Vec2 respawnPoint;
	NSMutableSet* labels;
	NSDictionary* levelData;
	unsigned detonatedBombs;
	unsigned collectedPickups;
	unsigned collectedPickupsWhenDone;
	NSMutableSet* collectedPickupNames;
	BOOL pushedRightButton;
	BOOL pushedLeftButton;
	NSFileHandle* ghostLog;
	NSString* ghostLogPath;
	NSFileHandle* ghostFile;
	unsigned ghostVersion;
	unsigned long ghostRecLen;
	Challenge* challenge;
	ChallengePlayer* currentChallenger;
	NSDictionary* challengerCheckPoints;
	NSString* challengeGhostLogPath;
	UIImage* startScreenShot;
	NSString* playingMusicForBG;
	BOOL scheduled;
	BOOL played;
	BOOL firstUpdate;
	BOOL saveGhost;
	BOOL isRecord;
	BOOL followCaptive;
	CGPoint panPosition;
	NSData* ghostBuffer;
	unsigned ghostBufferPtr;
	BOOL ghostInGoal;
	BOOL overrideGhostOutfit;
	unsigned ghostHubId;
	unsigned ghostEngineId;
	unsigned ghostWheelId;
	NSMutableDictionary* currentLevel;
	BOOL hasClouds;
	TrialBackground* levelBackground;
	TrialBackground* levelBackgroundSky;
	NSString* bgName;
	TrialHUD* hud;
	HSMenu* tutorialDialog;
	HSMenu* pauseDialog;
	HSMenu* goalDialog;
	HSMenu* purchaseDialog;
	HSOverlay* foundHiddenPileCoinOverlay;
	HSParticleSystemQuad* purchaseRetriesParticleSystem;
	BOOL showGhostHint;
	ghostData currentGdRec;
	ghostData lastGdRec;
	ghostData gd[600];
	int ghostIdx;
	BOOL isGhostRace;
	unsigned raceOpponent;
	BOOL tournamentReady;
	TournamentsClient* client;
	LoadingPopup* loading;
	NSDictionary* multiTarget;
	BOOL showingMultiTargetInfo;
	CGPoint worldOffset;
	unsigned updates;
	BOOL presentedBoostDialog;
	BOOL justPurchasedRestarts;
	float maxTargetScale;
	float minTargetScale;
	float startScale;
	float endScale;
	id restartButton;
	int newMedals;
	BOOL newlyCompletedLevel;
	BOOL started;
	BOOL paused;
	BOOL isChallenge;
	BOOL isTournament;
	unsigned availablePickups;
	unsigned availableBombs;
	NSArray* levelCheckpoints;
	CCSprite* skyLimit;
	Tournament* tournament_;
	float lastDistance;
	CGRect worldSize;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign, nonatomic) TrialHUD* hud;
@property(retain, nonatomic) HSMenu* tutorialDialog;
@property(retain, nonatomic) TrialLayer* gameLayer;
@property(retain, nonatomic) NSString* playingMusicForBG;
@property(retain, nonatomic) HSMenu* purchaseDialog;
@property(retain, nonatomic) HSMenu* goalDialog;
@property(retain, nonatomic) HSMenu* pauseDialog;
@property(retain, nonatomic) Challenge* challenge;
@property(readonly, assign, nonatomic) float lastDistance;
@property(readonly, assign, nonatomic) NSString* levelId;
@property(readonly, assign, nonatomic) BOOL firstUpdate;
@property(retain, nonatomic) CCSprite* skyLimit;
@property(assign, nonatomic) BOOL isDead;
@property(readonly, assign, nonatomic) BOOL done;
@property(retain, nonatomic) ChallengePlayer* currentChallenger;
@property(readonly, assign, nonatomic) Tournament* tournament;
@property(assign, nonatomic) BOOL isTournament;
@property(assign, nonatomic) BOOL isChallenge;
@property(assign, nonatomic) CGRect worldSize;
@property(readonly, assign, nonatomic) Object156* wheely;
@property(retain, nonatomic) NSArray* levelCheckpoints;
@property(assign, nonatomic) unsigned availableBombs;
@property(assign, nonatomic) unsigned availablePickups;
@property(assign, nonatomic) BOOL paused;
@property(assign, nonatomic) BOOL started;
+(id)sceneWithLevel:(id)level tournament:(id)tournament;
+(id)sceneWithLevel:(id)level challenge:(id)challenge;
+(id)sceneWithLevel:(id)level;
+(id)currentSession;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)controllerItemForIndex:(unsigned)index;
-(id)controllerItemConfig;
-(unsigned)controllerDefaultItem;
-(void)controllerCancel;
-(void)tournamentsClientSyncFailed;
-(void)tournamentsClientSyncCompleted;
-(void)died;
-(void)restartAfterDie;
-(void)breakOff;
-(void)breakOn;
-(void)setBoostLevel:(unsigned)level;
-(void)checkpoint:(id)checkpoint isChrono:(BOOL)chrono;
-(void)pileCollected:(id)collected;
-(void)goal:(float)goal;
-(BOOL)hasMetMultiTarget;
-(void)showTournamentGoalDialog;
-(void)showChallengeGoalDialog;
-(void)showGoalDialog;
-(void)incrementCoins;
-(BOOL)checkTarget:(id)target time1000:(int)a1000 tooLate:(id*)late;
-(void)quit;
-(void)skipLevel;
-(BOOL)isSinglePlayer;
-(void)resume;
-(void)pause;
-(void)resumeSchedulerAndActionsRecursive:(id)recursive;
-(void)pauseSchedulerAndActionsRecursive:(id)recursive;
-(void)closeTutorial;
-(void)showTutorial;
-(void)cleanGameLayer;
-(void)removeGameLayer;
-(void)stopRight;
-(void)stopLeft;
-(void)right;
-(void)left;
-(void)start;
-(void)updateTimer:(float)timer;
-(void)updateGhost;
-(void)saveGhostData;
-(void)flushGhostData;
-(void)openGhostFile:(id)file;
-(void)hideMultiTargetInfo;
-(void)showMultiTargetInfo;
-(void)checkOutfit;
-(void)loadTournament;
-(void)loadChallenge:(id)challenge;
-(id)pathForTemporaryFileWithPrefix:(id)prefix;
-(void)readGhostHeader;
-(void)setGhostHub:(id)hub engine:(id)engine wheel:(id)wheel;
-(void)createGhostLog;
-(void)writeGhostHeader;
-(void)bombDetonated;
-(void)pickupCollected:(id)collected;
-(void)update:(float)update;
-(void)onExit;
-(void)onEnter;
-(void)giveUpChallengeTurn;
-(void)hidePurchaseRetriesDialog:(BOOL)dialog;
-(void)showPurchaseRetriesDialog;
-(void)restartLevel;
-(id)getLastRunData;
-(void)saveChallengeData;
-(void)saveLevelData;
-(void)resetCheckpoints;
-(unsigned)challengeRetriesLeft;
-(void)loadOrCreateLevelData;
-(id)ghostFile;
-(void)takeStartScreenShot;
-(void)cleanup;
-(void)dealloc;
-(id)initWithLevel:(id)level challenge:(id)challenge tournament:(id)tournament;
-(void)removeAsCurrentSession;
@end

