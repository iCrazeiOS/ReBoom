/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "Boom-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableSet;

__attribute__((visibility("hidden")))
@interface LHCuttingEngineMgr : XXUnknownSuperclass {
	vector<CGPoint, std::__1::allocator<CGPoint> > explosionLines;
	NSMutableSet* spritesPreviouslyCut;
}
+(float)distanceBetweenPoint:(b2Vec2)point andPoint:(b2Vec2)point2;
+(id)sharedInstance;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)debugDrawing;
-(void)implodeSpritesInRadius:(float)radius withForce:(float)force position:(CGPoint)position inWorld:(b2World*)world;
-(void)explodeSpritesInRadius:(float)radius withForce:(float)force position:(CGPoint)position inWorld:(b2World*)world;
-(void)cutSpritesWithTag:(int)tag fromPoint:(CGPoint)point inRadius:(float)radius cuts:(int)cuts fromWorld:(b2World*)world;
-(void)cutSpritesFromPoint:(CGPoint)point inRadius:(float)radius cuts:(int)cuts fromWorld:(b2World*)world;
-(void)createExplosionWithCuts:(int)cuts radius:(float)radius atPoint:(CGPoint)point;
-(float)randomFloatBetween:(float)between andBig:(float)big;
-(void)cutAllSpritesWithTag:(int)tag intersectedByLine:(CGPoint)line lineB:(CGPoint)b fromWorld:(b2World*)world;
-(void)cutAllSpritesIntersectedByLine:(CGPoint)line lineB:(CGPoint)b fromWorld:(b2World*)world;
-(void)cutSprite:(id)sprite withLineA:(CGPoint)lineA lineB:(CGPoint)b;
-(void)cutFirstSpriteWithTag:(int)tag intersectedByLine:(CGPoint)line lineB:(CGPoint)b fromWorld:(b2World*)world;
-(void)cutFirstSpriteIntersectedByLine:(CGPoint)line lineB:(CGPoint)b fromWorld:(b2World*)world;
-(void)splitBody:(b2Body*)body intersectionPointA:(b2Vec2)a intersectionPointB:(b2Vec2)b linePointA:(CGPoint)a4 linePointB:(CGPoint)b5;
-(void)setInfoOnBody:(b2Body*)body fromBody:(b2Body*)body2;
-(void)createFixtureWithVertices:(vector<b2Vec2, std::__1::allocator<b2Vec2> >*)vertices onBody:(b2Body*)body fromOldFixture:(b2Fixture*)oldFixture;
-(bool)canCreateFixtureWithThisVertices:(b2Vec2*)thisVertices size:(int)size;
-(bool)testCentroid:(b2Vec2*)centroid size:(int)size;
-(vector<b2Vec2, std::__1::allocator<b2Vec2> >)clockwise:(vector<b2Vec2, std::__1::allocator<b2Vec2> >*)clockwise;
-(void)splitSprite:(id)sprite atPoint:(CGPoint)point triangulateAllFixtures:(bool)fixtures ignoreSmallerMass:(float)mass;
-(void)splitSprite:(id)sprite atPoint:(CGPoint)point;
-(id)spriteWithVertices:(b2Vec2*)vertices count:(int)count oldSprite:(id)sprite oldBody:(b2Body*)body oldFixture:(b2Fixture*)fixture massDestroyer:(float)destroyer;
-(b2Body*)createBodyWithPoints:(b2Vec2*)points count:(int)count oldBody:(b2Body*)body oldFixture:(b2Fixture*)fixture;
-(id)createNewSpriteFromBodyInfo:(b2Body*)bodyInfo andOldSprite:(id)sprite;
-(id)spriteWithVertices:(CGPoint*)vertices verticesCount:(int)count oldSprite:(id)sprite;
-(void)destroyAllPrevioslyCutSprites;
-(id)init;
-(void)dealloc;
-(void)explodeSpritesInRadius:(float)radius withForce:(float)force position:(CGPoint)position inWorld:(b2World*)world suction:(bool)suction;
@end

