/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class NSDate, ChallengeTurn, ChallengePlayer, NSNumber, NSString;

__attribute__((visibility("hidden")))
@interface Challenge : XXUnknownSuperclass {
}
@property(retain, nonatomic) ChallengePlayer* receiver;
@property(retain, nonatomic) ChallengePlayer* initiator;
@property(retain, nonatomic) ChallengeTurn* currentChallengeTurn;
@property(retain, nonatomic) ChallengePlayer* creator;
@property(retain, nonatomic) NSNumber* version;
@property(retain, nonatomic) NSDate* updatedAt;
@property(retain, nonatomic) id recentlyPlayedLevels;
@property(retain, nonatomic) NSNumber* receiverWins;
@property(retain, nonatomic) NSDate* receiverLastPlayedAt;
@property(retain, nonatomic) NSDate* receiverJoinedAt;
@property(retain, nonatomic) NSNumber* receiverGaveUp;
@property(retain, nonatomic) NSNumber* receiverDeleted;
@property(retain, nonatomic) NSNumber* queued;
@property(retain, nonatomic) NSNumber* localNotificationScheduled;
@property(retain, nonatomic) NSNumber* isCompleted;
@property(retain, nonatomic) NSNumber* creatorWins;
@property(retain, nonatomic) NSDate* creatorLastPlayedAt;
@property(retain, nonatomic) NSDate* creatorJoinedAt;
@property(retain, nonatomic) NSNumber* creatorGaveUp;
@property(retain, nonatomic) NSNumber* creatorDeleted;
@property(retain, nonatomic) NSString* createdVia;
@property(retain, nonatomic) NSDate* createdAt;
@property(retain, nonatomic) NSNumber* challengeId;
@property(assign, nonatomic) BOOL justPoked;
+(void)vacuum:(BOOL)vacuum;
+(id)createFacebookChallenges:(id)challenges;
+(void)fixChallenges;
+(id)challengesSynced:(BOOL)synced queued:(BOOL)queued;
+(id)queuedChallenges;
+(id)syncedChallenges;
+(id)challenges;
+(id)createChallengeAndArchive:(BOOL)archive;
+(id)createChallengeAgainstPlayer:(id)player ghost:(id)ghost;
+(id)createChallengeAgainstPlayer:(id)player;
+(id)createChallengeAgainstPlayerUUID:(id)uuid;
+(id)createChallengeAgainstPlayerTinyUrl:(id)url;
+(id)loadChallengeByObjectPath:(id)path;
+(id)loadChallengeById:(id)anId;
+(id)loadChallengeIncludingCompletedAgainstPlayer:(id)player;
+(id)loadChallengeAgainstPlayer:(id)player;
+(id)loadChallengeAgainstPlayerUUID:(id)uuid;
+(id)loadChallengeAgainstPlayerTinyUrl:(id)url;
+(unsigned)numOfNewChallenges;
-(void)archive;
-(BOOL)isSelfRemoved;
-(void)removeSelfFromChallenge;
-(id)postData;
-(void)removeCurrentTurn;
-(void)poke;
-(void)update:(id)update archive:(BOOL)archive;
-(void)update:(id)update;
-(void)deleteTurns;
-(void)queue;
-(int)state;
-(BOOL)challengerIsWinner;
-(BOOL)selfIsWinner;
-(unsigned)challengerWins;
-(unsigned)selfWins;
-(id)challenger;
-(BOOL)isYourTurn;
-(void)deleteChallenge:(BOOL)challenge;
-(void)deleteChallenge;
@end

